
#Postgres
spring.datasource.url=${URL_DATABASE:jdbc:postgresql://localhost:5433/propostas?useTimezone=true&serverTimezone=America/Sao_Paulo}
spring.datasource.username=${DB_USER:propostas}
spring.datasource.password=${DB_PASSWORD:password}

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/desafio-proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/desafio-proposta/protocol/openid-connect/certs}

#jpa
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

server.error.include-message=always

#API Analise
api.analise.solicitacao=http://localhost:9999/api

#API Contas (cartões)
api.cartoes=http://localhost:8888/api/cartoes
api.cartoes.delay.consultaCartaoEmitidoClient=5000
api.cartoes.delay.avisaViagem=5000
api.cartoes.delay.bloqueiaCartao=5000
api.cartoes.bloqueio.sistemaresponsavel=api-propostas

#Spring Actuator
management.endpoints.web.exposure.exclude=env,beans
management.endpoints.web.exposure.include=health,metrics,prometheus
management.endpoint.health.show-details=always
